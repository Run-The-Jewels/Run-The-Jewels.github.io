current directory: /Users/irJERAD/Documents/RTJ/Run-The-Jewels.github.io/vendor/bundle/ruby/2.4.0/gems/rdiscount-1.6.8/ext
/usr/local/opt/ruby/bin/ruby -r ./siteconf20170203-10214-1w17swu.rb extconf.rb 
checking for random()... yes
checking for srandom()... yes
checking for rand()... yes
checking for srand()... yes
creating Makefile

To see why this extension failed to compile, please check the mkmf.log which can be found here:

  /Users/irJERAD/Documents/RTJ/Run-The-Jewels.github.io/vendor/bundle/ruby/2.4.0/extensions/x86_64-darwin-16/2.4.0/rdiscount-1.6.8/mkmf.log

current directory: /Users/irJERAD/Documents/RTJ/Run-The-Jewels.github.io/vendor/bundle/ruby/2.4.0/gems/rdiscount-1.6.8/ext
make "DESTDIR=" clean

current directory: /Users/irJERAD/Documents/RTJ/Run-The-Jewels.github.io/vendor/bundle/ruby/2.4.0/gems/rdiscount-1.6.8/ext
make "DESTDIR="
compiling Csio.c
compiling basename.c
compiling css.c
css.c:49:2: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
        CREATE(f);
        ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
css.c:72:12: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        written = fwrite(res, size, 1, f);
                ~ ^~~~~~~~~~~~~~~~~~~~~~~
2 warnings generated.
compiling docheader.c
compiling dumptree.c
dumptree.c:23:29: warning: returning 'const char [11]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case WHITESPACE: return "whitespace";
                            ^~~~~~~~~~~~
dumptree.c:24:29: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case CODE      : return "code";
                            ^~~~~~
dumptree.c:25:29: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case QUOTE     : return "quote";
                            ^~~~~~~
dumptree.c:26:29: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case MARKUP    : return "markup";
                            ^~~~~~~~
dumptree.c:27:29: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HTML      : return "html";
                            ^~~~~~
dumptree.c:28:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case DL        : return "dl";
                            ^~~~
dumptree.c:29:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case UL        : return "ul";
                            ^~~~
dumptree.c:30:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case OL        : return "ol";
                            ^~~~
dumptree.c:31:29: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case LISTITEM  : return "item";
                            ^~~~~~
dumptree.c:32:29: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HDR       : return "header";
                            ^~~~~~~~
dumptree.c:33:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HR        : return "hr";
                            ^~~~
dumptree.c:34:29: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case TABLE     : return "table";
                            ^~~~~~~
dumptree.c:35:29: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case SOURCE    : return "source";
                            ^~~~~~~~
dumptree.c:36:29: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case STYLE     : return "style";
                            ^~~~~~~
dumptree.c:37:29: warning: returning 'const char [14]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    default        : return "mystery node!";
                            ^~~~~~~~~~~~~~~
dumptree.c:104:33: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { 0, "P", "center" };
                                ^~~
dumptree.c:104:38: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { 0, "P", "center" };
                                     ^~~~~~~~
dumptree.c:143:2: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
        CREATE(stack);
        ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
18 warnings generated.
compiling emmatch.c
compiling generate.c
generate.c:227:14: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&amp;", f);
                    ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:229:14: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&lt;", f);
                    ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:231:14: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("%22", f);
                    ^~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:235:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:237:17: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "%%%02X", c);
                       ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:310:28: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                S(ref->title) = (e-title)-2;
                              ~ ~~~~~~~~~^~
generate.c:408:17: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "https://" ), 
                ^~~~~~~~~~
generate.c:407:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:409:17: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "http://" ), 
                ^~~~~~~~~
generate.c:407:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:410:17: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "news://" ),
                ^~~~~~~~~
generate.c:407:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:411:17: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "ftp://" ), 
                ^~~~~~~~
generate.c:407:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:423:29: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for (i=0, p=protocol; i < NRPROTOCOLS; i++, p++)
                          ~ ^ ~~~~~~~~~~~
generate.c:447:35: warning: initializing 'char *' with an expression of type 'const char [11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                  ^~~~~~~~~~~~~
generate.c:447:50: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                                 ^~~~
generate.c:448:12: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", DENY_IMG|INSIDE_TAG, IS_URL };
                                ^~~~~~~~~
generate.c:448:23: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", DENY_IMG|INSIDE_TAG, IS_URL };
                                           ^~~~~~~
generate.c:449:35: warning: initializing 'char *' with an expression of type 'const char [10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                  ^~~~~~~~~~~~
generate.c:449:49: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                                ^~~~
generate.c:450:33: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", DENY_A, IS_URL };
                                ^~~
generate.c:450:38: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", DENY_A, IS_URL };
                                     ^~~~~~
generate.c:460:7: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<a id=\"", "\"", 0, ">", "</a>", 0, IS_URL },
      ^~~~~
generate.c:460:17: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<a id=\"", "\"", 0, ">", "</a>", 0, IS_URL },
                ^~~~~~~~~~
generate.c:460:29: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<a id=\"", "\"", 0, ">", "</a>", 0, IS_URL },
                            ^~~~
generate.c:460:38: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<a id=\"", "\"", 0, ">", "</a>", 0, IS_URL },
                                     ^~~
generate.c:460:43: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<a id=\"", "\"", 0, ">", "</a>", 0, IS_URL },
                                          ^~~~~~
generate.c:461:7: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "raw:", 4, 0, 0, 0, 0, 0, DENY_HTML, 0 },
      ^~~~~~
generate.c:462:7: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~
generate.c:462:19: warning: initializing 'char *' with an expression of type 'const char [13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                  ^~~~~~~~~~~~~~~
generate.c:462:36: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                   ^~~~
generate.c:462:45: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                            ^~~
generate.c:462:50: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                 ^~~~~~~~~
generate.c:463:7: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
      ^~~~~~~
generate.c:463:19: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                  ^~~~~~~~~~~~~~~~
generate.c:463:37: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                    ^~~~
generate.c:463:46: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                             ^~~
generate.c:463:51: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                                  ^~~~~~~~~
generate.c:464:7: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~~
generate.c:464:20: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                   ^~~~~~~~~~~~~~~~
generate.c:464:38: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                     ^~~~
generate.c:464:47: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                              ^~~
generate.c:464:52: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                   ^~~~~~~~~
generate.c:477:30: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0, r=specials; i < NR(specials); i++,r++ ) {
                           ~ ^ ~~~~~~~~~~~~
generate.c:496:19: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            puturl(edit, strlen(edit), f, 0);
            ~~~~~~       ^~~~~~~~~~~~
generate.c:545:35: warning: passing 'const char [13]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->height ) Qprintf(f," height=\"%d\"", ref->height);
                                         ^~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:546:35: warning: passing 'const char [12]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->width ) Qprintf(f, " width=\"%d\"", ref->width);
                                         ^~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:550:14: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring(" title=\"", f);
                    ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:578:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(name);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
generate.c:633:25: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   Qstring("&amp;", f); break;
                        ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:634:25: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   Qstring("&gt;", f); break;
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:635:25: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   Qstring("&lt;", f); break;
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:648:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("&#", f);
                ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:649:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, COINTOSS() ? "x%02x;" : "%02d;", *((unsigned char*)(s++)) );
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./config.h:9:20: note: expanded from macro 'COINTOSS'
#define COINTOSS() (random()&1)
                   ^
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:712:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:723:13: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<del>", f);
            ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:725:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</del>", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:740:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<code>", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:742:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code>", f);
            ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:819:10: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<a href=\"", f);
                ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:822:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            mangle("mailto:", 7, f);
                   ^~~~~~~~~
generate.c:645:14: note: passing argument to parameter 's' here
mangle(char *s, int len, MMIOT *f)
             ^
generate.c:825:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\">", f);
                ^~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:827:10: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:834:10: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:937:17: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "&r%cquo;", typeofquote);
                       ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:943:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "&l%cquo;", typeofquote);
                   ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:963:18: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    if ( !(len = strlen(s)) )
               ~ ^~~~~~~~~
generate.c:985:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s>",      "rsquo",  0 },
            ^~~~~
generate.c:985:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:986:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t>",      "rsquo",  0 },
            ^~~~~
generate.c:986:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:987:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re>",     "rsquo",  0 },
            ^~~~~~
generate.c:987:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:988:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll>",     "rsquo",  0 },
            ^~~~~~
generate.c:988:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:989:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve>",     "rsquo",  0 },
            ^~~~~~
generate.c:989:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:990:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m>",      "rsquo",  0 },
            ^~~~~
generate.c:990:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:991:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d>",      "rsquo",  0 },
            ^~~~~
generate.c:991:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:992:13: warning: initializing 'char *' with an expression of type 'const char [3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "mdash",  1 },
            ^~~~
generate.c:992:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "mdash",  1 },
                        ^~~~~~~
generate.c:993:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "<->",      "ndash",  0 },
            ^~~~~
generate.c:993:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "<->",      "ndash",  0 },
                        ^~~~~~~
generate.c:994:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
            ^~~~~
generate.c:994:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
                        ^~~~~~~~
generate.c:995:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
            ^~~~~~~
generate.c:995:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
                        ^~~~~~~~
generate.c:996:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
            ^~~~~
generate.c:996:25: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
                        ^~~~~~
generate.c:997:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
            ^~~~~
generate.c:997:25: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
                        ^~~~~
generate.c:998:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
            ^~~~~~
generate.c:998:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
                        ^~~~~~~
generate.c:999:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4>",    "frac34", 2 },
            ^~~~~~~
generate.c:999:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4>",    "frac34", 2 },
                        ^~~~~~~~
generate.c:1000:13: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4ths>", "frac34", 2 },
            ^~~~~~~~~~
generate.c:1000:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4ths>", "frac34", 2 },
                        ^~~~~~~~
generate.c:1001:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/2>",    "frac12", 2 },
            ^~~~~~~
generate.c:1001:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/2>",    "frac12", 2 },
                        ^~~~~~~~
generate.c:1002:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4>",    "frac14", 2 },
            ^~~~~~~
generate.c:1002:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4>",    "frac14", 2 },
                        ^~~~~~~~
generate.c:1003:13: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4th>",  "frac14", 2 },
            ^~~~~~~~~
generate.c:1003:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4th>",  "frac14", 2 },
                        ^~~~~~~~
generate.c:1004:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '&',  "&#0;",      0,       3 },
            ^~~~~~
generate.c:1022:14: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qprintf(f, "&%s;", smarties[i].entity);
                           ^~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1044:16: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&ldquo;", f);
                                    ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1046:16: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&rdquo;", f);
                                    ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1019:18: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0; i < NRSMART; i++)
               ~ ^ ~~~~~~~
generate.c:1108:22: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        case 3:     Qstring(tag_text(f) ? "  " : "<br/>", f);
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1084:21: note: expanded from macro 'tag_text'
#define tag_text(f)     (f->flags & INSIDE_TAG)
                        ^
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1112:12: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&gt;", f);
                                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1118:12: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&quot;", f);
                                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1126:16: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("![", f);
                                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1141:12: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("<sup>",f);
                                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1147:12: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("</sup>", f);
                                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1186:27: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    case '&':   Qstring("&amp;", f);
                                        ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1188:27: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    case '<':   Qstring("&lt;", f);
                                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1205:12: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&lt;", f);
                                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1213:12: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&amp;", f);
                                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1232:16: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qprintf(f, "<h%d", pp->hnumber);
               ^~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1234:13: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, " id=\"", pp->hnumber);
                   ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1235:61: warning: incompatible pointer types passing 'void (int, MMIOT *)' (aka 'void (int, struct mmiot *)') to parameter of type 'void (*)(int, void *)' [-Wincompatible-pointer-types]
        mkd_string_to_anchor(T(pp->text->text), S(pp->text->text), Qchar, f);
                                                                   ^~~~~
./markdown.h:135:51: note: passing argument to parameter here
extern void mkd_string_to_anchor(char*,int, void(*)(int,void*), void*);
                                                  ^
generate.c:1241:16: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qprintf(f, "</h%d>", pp->hnumber);
               ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1247:31: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                              ^~
generate.c:1247:35: warning: initializing 'char *' with an expression of type 'const char [16]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                                  ^~~~~~~~~~~~~~~~~~~
generate.c:1247:56: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                                                       ^~~~~~~~~~~~~~~~~
generate.c:1248:7: warning: initializing 'char *' with an expression of type 'const char [15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                  " align=\"right\"" };
                                  ^~~~~~~~~~~~~~~~~~
generate.c:1259:13: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tr>\n", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1268:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%s%s>",
                   ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1272:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%s>\n", block);
                   ^~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1278:17: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "<%s></%s>\n", block, block);
                       ^~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1281:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tr>\n", f);
            ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1306:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(align);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
generate.c:1324:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<table>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1325:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<thead>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1326:24: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    hcols = splat(hdr, "th", align, 0, f);
                       ^~~~
generate.c:1253:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1327:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</thead>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1335:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tbody>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1337:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        splat(body, "td", align, 1, f);
                    ^~~~
generate.c:1253:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1338:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tbody>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1339:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</table>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1350:30: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                             ^~
generate.c:1350:34: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                 ^~~~~
generate.c:1350:41: warning: initializing 'char *' with an expression of type 'const char [31]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1351:30: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                             ^~
generate.c:1351:34: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                 ^~~~~~
generate.c:1351:41: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                        ^~~~~~
generate.c:1359:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                push("\003\n", 2, f);
                     ^~~~~~~~
generate.c:34:12: note: passing argument to parameter 'bfr' here
push(char *bfr, int size, MMIOT *f)
           ^
generate.c:1365:12: warning: passing 'const char [2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    push("\n", 1, f);
                         ^~~~
generate.c:34:12: note: passing argument to parameter 'bfr' here
push(char *bfr, int size, MMIOT *f)
           ^
generate.c:1382:13: warning: passing 'const char [12]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<pre><code>", f);
            ^~~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1394:13: warning: passing 'const char [14]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code></pre>", f);
            ^~~~~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1421:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, arguments ? "<%s %s>" : "<%s>", block, arguments);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1426:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\n\n", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1430:14: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
         Qprintf(f, "</%s>", block);
                    ^~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1465:13: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%cl", (typ==UL)?'u':'o');
                   ^~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1467:17: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, " type=a");
                       ^~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1468:13: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, ">\n");
                   ^~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1471:23: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            htmlify(p->down, "li", p->ident, f);
                             ^~~~
generate.c:1417:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1475:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%cl>\n", (typ==UL)?'u':'o');
                   ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1501:19: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        htmlify(p->down, p->ident ? "div" : "blockquote", p->ident, f);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1417:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1517:10: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<hr />", f);
                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
159 warnings generated.
compiling html5.c
html5.c:15:20: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ASIDE", 0);
                   ^~~~~~~
./tags.h:16:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:16:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("FOOTER", 0);
                   ^~~~~~~~
./tags.h:16:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:17:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("HEADER", 0);
                   ^~~~~~~~
./tags.h:16:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:18:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("HGROUP", 0);
                   ^~~~~~~~
./tags.h:16:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:19:20: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("NAV", 0);
                   ^~~~~
./tags.h:16:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:20:20: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("SECTION", 0);
                   ^~~~~~~~~
./tags.h:16:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:21:20: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ARTICLE", 0);
                   ^~~~~~~~~
./tags.h:16:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
7 warnings generated.
compiling markdown.c
markdown.c:104:30: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static struct kw comment = { "!--", 3, 0 };
                             ^~~~~
markdown.c:185:21: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            splitline(t, 3 + (end - T(t->text)) );
            ~~~~~~~~~    ~~^~~~~~~~~~~~~~~~~~~~
markdown.c:670:8: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        char *prefix = "class";
              ^        ~~~~~~~
markdown.c:678:12: warning: assigning to 'char *' from 'const char [3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            prefix="id";
                  ^~~~~
markdown.c:838:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(foot->tag);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
markdown.c:839:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(foot->link);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
markdown.c:840:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(foot->title);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
markdown.c:1089:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(doc->ctx->in);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
markdown.c:1091:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(*doc->ctx->footnotes);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
9 warnings generated.
compiling mkdio.c
mkdio.c:48:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(p->text);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
mkdio.c:103:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(line);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
2 warnings generated.
compiling rdiscount.c
rdiscount.c:18:17: warning: implicit declaration of function 'rb_rdiscount__get_flags' is invalid in C99 [-Wimplicit-function-declaration]
    int flags = rb_rdiscount__get_flags(self);
                ^
rdiscount.c:20:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/usr/local/Cellar/ruby/2.4.0/include/ruby-2.4.0/ruby/ruby.h:976:6: note: expanded from macro 'RSTRING_LEN'
     RSTRING_EMBED_LEN(str) : \
     ^~~~~~~~~~~~~~~~~~~~~~
/usr/local/Cellar/ruby/2.4.0/include/ruby-2.4.0/ruby/ruby.h:972:6: note: expanded from macro 'RSTRING_EMBED_LEN'
     (long)((RBASIC(str)->flags >> RSTRING_EMBED_LEN_SHIFT) & \
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
rdiscount.c:20:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/usr/local/Cellar/ruby/2.4.0/include/ruby-2.4.0/ruby/ruby.h:977:28: note: expanded from macro 'RSTRING_LEN'
     RSTRING(str)->as.heap.len)
     ~~~~~~~~~~~~~~~~~~~~~~^~~
rdiscount.c:57:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/usr/local/Cellar/ruby/2.4.0/include/ruby-2.4.0/ruby/ruby.h:976:6: note: expanded from macro 'RSTRING_LEN'
     RSTRING_EMBED_LEN(str) : \
     ^~~~~~~~~~~~~~~~~~~~~~
/usr/local/Cellar/ruby/2.4.0/include/ruby-2.4.0/ruby/ruby.h:972:6: note: expanded from macro 'RSTRING_EMBED_LEN'
     (long)((RBASIC(str)->flags >> RSTRING_EMBED_LEN_SHIFT) & \
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
rdiscount.c:57:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/usr/local/Cellar/ruby/2.4.0/include/ruby-2.4.0/ruby/ruby.h:977:28: note: expanded from macro 'RSTRING_LEN'
     RSTRING(str)->as.heap.len)
     ~~~~~~~~~~~~~~~~~~~~~~^~~
5 warnings generated.
compiling resource.c
resource.c:92:2: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
        CREATE(f->in);
        ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
resource.c:93:2: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
        CREATE(f->out);
        ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
resource.c:94:2: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
        CREATE(f->Q);
        ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
resource.c:99:6: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
            CREATE(*f->footnotes);
            ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
4 warnings generated.
compiling tags.c
tags.c:18:15: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    p->size = strlen(id);
            ~ ^~~~~~~~~~
tags.c:78:8: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("STYLE");
       ^~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:79:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("SCRIPT");
       ^~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:80:8: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("ADDRESS");
       ^~~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:81:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BDO");
       ^~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:82:8: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BLOCKQUOTE");
       ^~~~~~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:83:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("CENTER");
       ^~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:84:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DFN");
       ^~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:85:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DIV");
       ^~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:86:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OBJECT");
       ^~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:87:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H1");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:88:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H2");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:89:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H3");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:90:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H4");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:91:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H5");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:92:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H6");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:93:8: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("LISTING");
       ^~~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:94:8: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("NOBR");
       ^~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:95:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("UL");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:96:8: warning: passing 'const char [2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("P");
       ^~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:97:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OL");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:98:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DL");
       ^~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:99:8: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PLAINTEXT");
       ^~~~~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:100:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PRE");
       ^~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:101:8: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("TABLE");
       ^~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:102:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("WBR");
       ^~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:103:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("XMP");
       ^~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:104:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    SC("HR");
       ^~~~
tags.c:71:30: note: expanded from macro 'SC'
#define SC(x)   mkd_define_tag(x, 1)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:105:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    SC("BR");
       ^~~~
tags.c:71:30: note: expanded from macro 'SC'
#define SC(x)   mkd_define_tag(x, 1)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:106:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("IFRAME");
       ^~~~~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:107:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("MAP");
       ^~~~~
tags.c:70:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
31 warnings generated.
compiling toc.c
toc.c:26:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(res);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
toc.c:40:20: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res,  "%*s</li>\n", srcp->hnumber, "");
                                        ^~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:42:19: warning: passing 'const char [19]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res, "%*s</li>\n%*s</ul>\n",
                                       ^~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:49:19: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res, "\n%*s<ul>\n", srcp->hnumber, "");
                                       ^~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:52:22: warning: passing 'const char [18]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "%*s<li><a href=\"#", srcp->hnumber, "");
                                   ^~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:53:70: warning: incompatible pointer types passing 'void (int, Cstring *)' to parameter of type 'void (*)(int, void *)' [-Wincompatible-pointer-types]
                    mkd_string_to_anchor(T(srcp->text->text), S(srcp->text->text), Csputc, &res);
                                                                                   ^~~~~~
./markdown.h:135:51: note: passing argument to parameter here
extern void mkd_string_to_anchor(char*,int, void(*)(int,void*), void*);
                                                  ^
toc.c:54:22: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "\">");
                                   ^~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:56:22: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "</a>");
                                   ^~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:63:17: warning: passing 'const char [19]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Csprintf(&res, "%*s</li>\n%*s</ul>\n",
                       ^~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:85:8: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        ret = fwrite(buf, sz, 1, out);
            ~ ^~~~~~~~~~~~~~~~~~~~~~~
10 warnings generated.
compiling xml.c
xml.c:26:24: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   return "&lt;";
                       ^~~~~~
xml.c:27:24: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   return "&gt;";
                       ^~~~~~
xml.c:28:24: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   return "&amp;";
                       ^~~~~~~
xml.c:29:24: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '"':   return "&quot;";
                       ^~~~~~~~
xml.c:30:24: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '\'':  return "&apos;";
                       ^~~~~~~~
xml.c:33:10: warning: returning 'const char [1]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                return "";
                       ^~
xml.c:67:5: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
    CREATE(f);
    ^
./cstring.h:21:26: note: expanded from macro 'CREATE'
#define CREATE(x)       T(x) = (void*)(S(x) = (x).alloc = 0)
                               ^
xml.c:73:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            Cswrite(&f, entity, strlen(entity));
            ~~~~~~~             ^~~~~~~~~~~~~~
8 warnings generated.
linking shared-object rdiscount.bundle

current directory: /Users/irJERAD/Documents/RTJ/Run-The-Jewels.github.io/vendor/bundle/ruby/2.4.0/gems/rdiscount-1.6.8/ext
make "DESTDIR=" install
/usr/bin/install -c -m 0755 rdiscount.bundle ./.gem.20170203-10214-5z5sb3
